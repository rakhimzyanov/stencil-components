/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyComp1 {}
  interface MyComp10 {}
  interface MyComp2 {}
  interface MyComp3 {}
  interface MyComp4 {}
  interface MyComp5 {}
  interface MyComp6 {}
  interface MyComp7 {}
  interface MyComp8 {}
  interface MyComp9 {}
  interface MyModal {
    'open': boolean;
    'transparent': boolean;
  }
  interface SharedButton {
    'name': string;
  }
}

declare global {


  interface HTMLMyComp1Element extends Components.MyComp1, HTMLStencilElement {}
  var HTMLMyComp1Element: {
    prototype: HTMLMyComp1Element;
    new (): HTMLMyComp1Element;
  };

  interface HTMLMyComp10Element extends Components.MyComp10, HTMLStencilElement {}
  var HTMLMyComp10Element: {
    prototype: HTMLMyComp10Element;
    new (): HTMLMyComp10Element;
  };

  interface HTMLMyComp2Element extends Components.MyComp2, HTMLStencilElement {}
  var HTMLMyComp2Element: {
    prototype: HTMLMyComp2Element;
    new (): HTMLMyComp2Element;
  };

  interface HTMLMyComp3Element extends Components.MyComp3, HTMLStencilElement {}
  var HTMLMyComp3Element: {
    prototype: HTMLMyComp3Element;
    new (): HTMLMyComp3Element;
  };

  interface HTMLMyComp4Element extends Components.MyComp4, HTMLStencilElement {}
  var HTMLMyComp4Element: {
    prototype: HTMLMyComp4Element;
    new (): HTMLMyComp4Element;
  };

  interface HTMLMyComp5Element extends Components.MyComp5, HTMLStencilElement {}
  var HTMLMyComp5Element: {
    prototype: HTMLMyComp5Element;
    new (): HTMLMyComp5Element;
  };

  interface HTMLMyComp6Element extends Components.MyComp6, HTMLStencilElement {}
  var HTMLMyComp6Element: {
    prototype: HTMLMyComp6Element;
    new (): HTMLMyComp6Element;
  };

  interface HTMLMyComp7Element extends Components.MyComp7, HTMLStencilElement {}
  var HTMLMyComp7Element: {
    prototype: HTMLMyComp7Element;
    new (): HTMLMyComp7Element;
  };

  interface HTMLMyComp8Element extends Components.MyComp8, HTMLStencilElement {}
  var HTMLMyComp8Element: {
    prototype: HTMLMyComp8Element;
    new (): HTMLMyComp8Element;
  };

  interface HTMLMyComp9Element extends Components.MyComp9, HTMLStencilElement {}
  var HTMLMyComp9Element: {
    prototype: HTMLMyComp9Element;
    new (): HTMLMyComp9Element;
  };

  interface HTMLMyModalElement extends Components.MyModal, HTMLStencilElement {}
  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };

  interface HTMLSharedButtonElement extends Components.SharedButton, HTMLStencilElement {}
  var HTMLSharedButtonElement: {
    prototype: HTMLSharedButtonElement;
    new (): HTMLSharedButtonElement;
  };
  interface HTMLElementTagNameMap {
    'my-comp-1': HTMLMyComp1Element;
    'my-comp-10': HTMLMyComp10Element;
    'my-comp-2': HTMLMyComp2Element;
    'my-comp-3': HTMLMyComp3Element;
    'my-comp-4': HTMLMyComp4Element;
    'my-comp-5': HTMLMyComp5Element;
    'my-comp-6': HTMLMyComp6Element;
    'my-comp-7': HTMLMyComp7Element;
    'my-comp-8': HTMLMyComp8Element;
    'my-comp-9': HTMLMyComp9Element;
    'my-modal': HTMLMyModalElement;
    'shared-button': HTMLSharedButtonElement;
  }
}

declare namespace LocalJSX {
  interface MyComp1 {}
  interface MyComp10 {}
  interface MyComp2 {}
  interface MyComp3 {}
  interface MyComp4 {}
  interface MyComp5 {}
  interface MyComp6 {}
  interface MyComp7 {}
  interface MyComp8 {}
  interface MyComp9 {}
  interface MyModal {
    'onOpenChange'?: (event: CustomEvent<boolean>) => void;
    'open'?: boolean;
    'transparent'?: boolean;
  }
  interface SharedButton {
    'name'?: string;
    'onClickBtn'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'my-comp-1': MyComp1;
    'my-comp-10': MyComp10;
    'my-comp-2': MyComp2;
    'my-comp-3': MyComp3;
    'my-comp-4': MyComp4;
    'my-comp-5': MyComp5;
    'my-comp-6': MyComp6;
    'my-comp-7': MyComp7;
    'my-comp-8': MyComp8;
    'my-comp-9': MyComp9;
    'my-modal': MyModal;
    'shared-button': SharedButton;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-comp-1': LocalJSX.MyComp1 & JSXBase.HTMLAttributes<HTMLMyComp1Element>;
      'my-comp-10': LocalJSX.MyComp10 & JSXBase.HTMLAttributes<HTMLMyComp10Element>;
      'my-comp-2': LocalJSX.MyComp2 & JSXBase.HTMLAttributes<HTMLMyComp2Element>;
      'my-comp-3': LocalJSX.MyComp3 & JSXBase.HTMLAttributes<HTMLMyComp3Element>;
      'my-comp-4': LocalJSX.MyComp4 & JSXBase.HTMLAttributes<HTMLMyComp4Element>;
      'my-comp-5': LocalJSX.MyComp5 & JSXBase.HTMLAttributes<HTMLMyComp5Element>;
      'my-comp-6': LocalJSX.MyComp6 & JSXBase.HTMLAttributes<HTMLMyComp6Element>;
      'my-comp-7': LocalJSX.MyComp7 & JSXBase.HTMLAttributes<HTMLMyComp7Element>;
      'my-comp-8': LocalJSX.MyComp8 & JSXBase.HTMLAttributes<HTMLMyComp8Element>;
      'my-comp-9': LocalJSX.MyComp9 & JSXBase.HTMLAttributes<HTMLMyComp9Element>;
      'my-modal': LocalJSX.MyModal & JSXBase.HTMLAttributes<HTMLMyModalElement>;
      'shared-button': LocalJSX.SharedButton & JSXBase.HTMLAttributes<HTMLSharedButtonElement>;
    }
  }
}


